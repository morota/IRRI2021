library(metafor)
library("metafor")
knitr::opts_chunk$set(echo = TRUE)
library(metafor)
sample=read.csv("~/Downloads/sample_meta.csv")
head(sample)
dim(sample)
?escalc
# 効果量を計算します
sample=escalc(n1i = NC, n2i = NT, m1i = MC, m2i = MT,
sd1i = SC, sd2i = ST, data = sample, measure = "SMD",
append = TRUE)
sample
sample
# 計算した効果量を，変量モデル(random-effects model)にフィットさせます．
?rma
rma
sample_analysis ＝ rma(yi, vi, data = sample)
sample_analysis <- rma(yi, vi, data = sample)
sample_analysis
# forest plot
forest(sample_analysis, slab = paste(sample$Author, sample$year, sep = ", "))
text(-8, 12.5, "Author(s), Year", pos = 4)
text(8, 12.5, " Effect size [95% CI]", pos = 2)
forest(sample_analysis, slab = paste(sample$Author, sample$year, sep = ", "))
text(-8, 12.5, "Author(s), Year", pos = 4)
text(8, 12.5, " Effect size [95% CI]", pos = 2)
# funnel plot
funnel(sample_analysis , main = "Mixed-Effects Model")
funnel(sample_analysis , main = "Mixed-Effects Model")
?metafor
data(dat.bcg)
data(dat.bcg)
?dat.bcg
data.bcg
data.bcg
data(dat.bcg)
dat.bcg
dat.bcg
?escalc
res = rma(yi, vi, data=dat) # デフォルトはランダム効果モデルのREML（restricted maximum-likelihood estimator）です。たいていの教科書に最初に載っている DerSimonian-Laird にするには method="DL" を指定します。
dat <- dat.bcg
dat
dat = escalc(measure="RR", ai=tpos, bi=tneg, ci=cpos, di=cneg, data=dat.bcg)
res = rma(yi, vi, data=dat) # デフォルトはランダム効果モデルのREML（restricted maximum-likelihood estimator）です。たいていの教科書に最初に載っている DerSimonian-Laird にするには method="DL" を指定します。
res
forest(res)
data("dat.bcg", package = "metafor")
print(dat.bcg, row.names = FALSE)
dat <- escalc(measure = "RR", ai = tpos, bi = tneg, ci = cpos,　di = cneg, data = dat.bcg, append = TRUE)
dat
dat
# The same output
res <- rma(ai = tpos, bi = tneg, ci = cpos, di = cneg, data = dat, measure = "RR")
res
# We can obtain corresponding confidence intervals
confint(res)
# Forest plot
forest(res, slab = paste(dat$author, dat$year, sep = ", "), xlim = c(-16, 6), at = log(c(0.05, 0.25, 1, 4)), atransf = exp, ilab = cbind(dat$tpos, dat$tneg, dat$cpos, dat$cneg), ilab.xpos = c(-9.5, -8, -6, -4.5), cex = 0.75)
op <- par(cex = 0.75, font = 2)
text(c(-9.5, -8, -6, -4.5), 15, c("TB+", "TB-", "TB+", "TB-"))
text(c(-8.75, -5.25), 16, c("Vaccinated", "Control"))
text(-16, 15, "Author(s) and Year", pos = 4)
text(6, 15, "Relative Risk [95% CI]", pos = 2)
forest(res, slab = paste(dat$author, dat$year, sep = ", "), xlim = c(-16, 6), at = log(c(0.05, 0.25, 1, 4)), atransf = exp, ilab = cbind(dat$tpos, dat$tneg, dat$cpos, dat$cneg), ilab.xpos = c(-9.5, -8, -6, -4.5), cex = 0.75)
op <- par(cex = 0.75, font = 2)
text(c(-9.5, -8, -6, -4.5), 15, c("TB+", "TB-", "TB+", "TB-"))
text(c(-8.75, -5.25), 16, c("Vaccinated", "Control"))
text(-16, 15, "Author(s) and Year", pos = 4)
text(6, 15, "Relative Risk [95% CI]", pos = 2)
par(op)
# Mixed effect model with moderators
res <- rma(yi, vi, mods = cbind(ablat, year), data = dat)
res # produce the same results
res # produce the same results
# Plot of Relative risk of a tuberculosis infection versus absolute latitude of study location.
preds <- predict(res, newmods = cbind(0:60, 1970), transf = exp)
wi <- 1/sqrt(dat$vi)
size <- 0.5 + 3 * (wi - min(wi))/(max(wi) - min(wi))
plot(dat$ablat, exp(dat$yi), pch = 19, cex = size,
xlab = "Absolute Latitude", ylab = "Relative Risk", las = 1, bty = "l", log = "y")
lines(0:60, preds$pred)
lines(0:60, preds$ci.lb, lty = "dashed")
lines(0:60, preds$ci.ub, lty = "dashed")
abline(h = 1, lty = "dotted")
# Categorical moderator variables
rma(yi, vi, data = dat, subset = (alloc=="random"))
rma(yi, vi, data = dat, subset = (alloc=="alternate"))
rma(yi, vi, data = dat, subset = (alloc=="systematic"))
# Fit a single mixed-effects model to these data with a dummy coded factor.
dat$a.random <- ifelse(dat$alloc == "random", 1, 0)
dat$a.alternate <- ifelse(dat$alloc == "alternate", 1, 0)
dat$a.systematic <- ifelse(dat$alloc == "systematic", 1, 0)
dat$a.random
dat
rma(yi, vi, mods = cbind(a.random, a.alternate, a.systematic),intercept = FALSE, data = dat)
rma(yi, vi, mods = cbind(a.random, a.alternate, a.systematic),intercept = FALSE, data = dat)
# Also, Instead of doing the coding manually, we can use the factor() function to handle the coding for us.
rma(yi, vi, mods = ~ factor(alloc) - 1, data = dat)
rma(yi, vi, mods = cbind(a.alternate, a.systematic), data = dat)
# or, equivalently,
rma(yi, vi, mods = ~ factor(alloc), data = dat)
rma(yi, vi, mods = ~ factor(alloc), data = dat)
rma(yi, vi, mods = cbind(a.alternate, a.systematic), data = dat)
rma(yi, vi, mods = cbind(a.alternate, a.systematic), data = dat)
# Knapp and Hartung adjustment
rma(yi, vi, mods = ~ factor(alloc) + ablat, data = dat, knha = TRUE)
rma(yi, vi, mods = ~ factor(alloc) + ablat, data = dat, knha = TRUE)
